{"version":3,"sources":["webpack:///./src/components/total_salary_list.vue?16f4","webpack:///./src/components/total_salary_list.vue?dbe1","webpack:///src/components/total_salary_list.vue","webpack:///./src/components/total_salary_list.vue?6c66","webpack:///./src/components/total_salary_list.vue?d5b8"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","staticStyle","user","role","is_print","_m","_l","staff","key","st_id","_v","_s","staff_name","getTotalsByStaff","toLocaleString","totals","_e","staticRenderFns","name","data","list","zeros","dollar_price","month","year","loading","staffs","beforeCreate","auth","created","mounted","special","then","window","methods","fridays","day","counter","date","getDaysAndFridays","days","overWorkDayToOvertime","getSuitableSalary","item","total_salary_dollar","total_salary_dinar","total_overtime_dollar","total_overtime_dinar","total_food_dollar","total_food_dinar","total_transport_dollar","total_transport_dinar","total_cabina_dollar","total_cabina_dinar","total_expense_dollar","total_expense_dinar","total_fine_dollar","total_fine_dinar","total_loan_dollar","total_loan_dinar","total_accomodation_dollar","total_accomodation_dinar","total_salary_per_month_dollar","total_salary_per_month_dinar","total_other_minus_dollar","total_other_minus_dinar","sub_total_dollar_dollar","Number","sub_total_dollar_dinar","Math","sub_total_dinar_dollar","sub_total_dinar_dinar","computed","component","VProgressCircular"],"mappings":"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CA,iBAEA,oBAIAC,SACAC,aACA,UACAC,IACAC,IACAC,kBAEA,uBACA,iBACAD,MAEAD,KACAE,kBAEA,UAEAC,uBACA,kCACA,QAEA,sBACA,0BACA,gBACAJ,IAIA,OACAK,OACAL,YAGAM,wBACA,oCACA,iCAKA,0DACA,uDAEA,MAEA,QACA,UACA,6BACA,gCAIAC,qBAMA,0DACA,uDACA,MACA,gCACAC,qDACA,+CAEA,gBAIA9B,oBACA,OACA+B,0NACAC,uNAEAC,0OACAC,kOAEAC,gOACAC,6NAEAC,+OACAC,4OAEAC,uMACAC,oMAEAC,2QACAC,wQAEAC,uOACAC,oOAEAC,+PACAC,4PAEAC,+RACAC,4RAEAC,kNACAC,+MAEAC,2MACAC,wMAEAC,iLACAC,klBACA,GACAC,gLACAC,qmBACA,GAEAC,8KACAD,qfACA,GAEAE,6KACAF,yfACA,IAGA,WAGAG,UACAzD,SACA,OACA6B,oMACAC,iMAEAC,oNACAC,4MAEAC,0MACAC,uMAEAC,yNACAC,sNAEAC,iLACAC,8KAEAC,qPACAC,kPAEAC,iNACAC,8MAEAC,yOACAC,sOAEAC,yQACAC,sQAEAC,4LACAC,yLAEAC,qLACAC,kLAEAC,2JACAC,klBACA,GACAC,0JACAC,qmBACA,GAEAC,wJACAD,qfACA,GAEAE,uJACAF,yfACA,IAGA,YCxY2V,I,yDCQvVI,EAAY,eACd,EACAjF,EACAyB,GACA,EACA,KACA,WACA,MAIa,aAAAwD,EAAiB,QAKhC,IAAkBA,EAAW,CAACC,oBAAA,Q","file":"js/chunk-0c66f035.410b17da.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./total_salary_list.vue?vue&type=style&index=0&id=5ab684fd&prod&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"wrapper\"}},[_c('navbar',{staticClass:\"no-print animate__animated animate__fadeInLeft\",staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"nav\"}}),_c('div',{staticClass:\"d-flex flex-column animate__animated animate__fadeInRight\",staticStyle:{\"display\":\"none !important\"},attrs:{\"id\":\"content-wrapper\"}},[_c('div',{attrs:{\"id\":\"content\"}},[_c('header-btn',{staticClass:\"no-print\"}),_c('div',{staticClass:\"container-fluid text-dark\"},[(_vm.loading)?_c('div',{staticClass:\"w-100 text-center mt-15 pt-15\"},[_c('v-progress-circular',{attrs:{\"indeterminate\":\"\",\"color\":\"primary\",\"size\":\"50\"}})],1):(_vm.user.role == 'A' || _vm.user.role == 'E' || (_vm.user.role == 'K' && !_vm.is_print))?_c('table',{staticClass:\"table table-bordered table-striped text-center text-dark\",staticStyle:{\"page-break-inside\":\"always\",\"font-size\":\"12pt !important\"}},[_vm._m(0),_c('tbody',[_vm._l((_vm.staffs),function(staff){return [_c('tr',{key:'n' + staff.st_id},[_c('td',{staticClass:\"text-left ps-4\",attrs:{\"colspan\":\"12\"}},[_vm._v(\" \"+_vm._s(staff.staff_name)+\" \")])]),_c('tr',{key:'d' + staff.st_id},[_c('td',[_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_salary_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_salary_dinar).toLocaleString())+\" \")])]),_c('td',[_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_overtime_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_overtime_dinar).toLocaleString())+\" \")])]),_c('td',[_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_food_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_food_dinar).toLocaleString())+\" \")])]),_c('td',[_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_transport_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_transport_dinar).toLocaleString())+\" \")])]),_c('td',[_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_cabina_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_cabina_dinar).toLocaleString())+\" \")])]),_c('td',[_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_expense_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_expense_dinar).toLocaleString())+\" \")])]),_c('td',[_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_fine_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_fine_dinar).toLocaleString())+\" \")])]),_c('td',[_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_loan_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_loan_dinar).toLocaleString())+\" \")])]),_c('td',[_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_accomodation_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_accomodation_dinar).toLocaleString())+\" \")])]),_c('td',[_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_salary_per_month_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_salary_per_month_dinar).toLocaleString())+\" \")])]),_c('td',[_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_other_minus_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).total_other_minus_dinar).toLocaleString())+\" \")])]),_c('td',[_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).sub_total_dollar_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.getTotalsByStaff(staff.st_id).sub_total_dinar_dinar).toLocaleString())+\" \")])])])]}),_c('tr',[_c('td',{staticClass:\"para\"},[_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_salary_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_salary_dinar).toLocaleString())+\" \")])]),_c('td',{staticClass:\"para\"},[_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_overtime_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_overtime_dinar).toLocaleString())+\" \")])]),_c('td',{staticClass:\"para\"},[_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_food_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_food_dinar).toLocaleString())+\" \")])]),_c('td',{staticClass:\"para\"},[_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_transport_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_transport_dinar).toLocaleString())+\" \")])]),_c('td',{staticClass:\"para\"},[_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_cabina_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_cabina_dinar).toLocaleString())+\" \")])]),_c('td',{staticClass:\"para\"},[_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_expense_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_expense_dinar).toLocaleString())+\" \")])]),_c('td',{staticClass:\"para\"},[_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_fine_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_fine_dinar).toLocaleString())+\" \")])]),_c('td',{staticClass:\"para\"},[_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_loan_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_loan_dinar).toLocaleString())+\" \")])]),_c('td',{staticClass:\"para\"},[_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_accomodation_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_accomodation_dinar).toLocaleString())+\" \")])]),_c('td',{staticClass:\"para\"},[_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_salary_per_month_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_salary_per_month_dinar).toLocaleString())+\" \")])]),_c('td',{staticClass:\"para\"},[_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_other_minus_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.total_other_minus_dinar).toLocaleString())+\" \")])]),_c('td',{staticClass:\"para\"},[_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.sub_total_dollar_dollar).toLocaleString())+\" $ \")]),_c('br'),_c('br'),_c('span',[_vm._v(\" \"+_vm._s((_vm.totals.sub_total_dinar_dinar).toLocaleString())+\" \")])])])],2)]):_vm._e()])],1)])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('th',[_vm._v(\" Total Salary \")]),_c('th',[_vm._v(\" Total Overtime Hours \")]),_c('th',[_vm._v(\" Total Food \")]),_c('th',[_vm._v(\" Total Transport \")]),_c('th',[_vm._v(\" Total Cabina \")]),_c('th',[_vm._v(\" Total Expense \")]),_c('th',[_vm._v(\" Total Fine \")]),_c('th',[_vm._v(\" Total Loan \")]),_c('th',[_vm._v(\" Total Accomodation \")]),_c('th',[_vm._v(\" Total Salary per Month \")]),_c('th',[_vm._v(\" Total Other Minus \")]),_c('th',[_vm._v(\" Sub Total \")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"wrapper\">\r\n        <navbar id=\"nav\" class=\"no-print animate__animated animate__fadeInLeft\"  style=\"display: none;\"/>\r\n        <div class=\"d-flex flex-column animate__animated animate__fadeInRight\" id=\"content-wrapper\" style=\"display: none !important;\">\r\n            <div id=\"content\">\r\n                <header-btn class=\"no-print\"/>\r\n                <div class=\"container-fluid text-dark\">\r\n                    <div class=\"w-100 text-center mt-15 pt-15\" v-if=\"loading\">\r\n                        <v-progress-circular indeterminate color=\"primary\" size=\"50\"></v-progress-circular>\r\n                    </div>\r\n                    <table v-else-if=\"user.role == 'A' || user.role == 'E' || (user.role == 'K' && !is_print)\" class=\"table table-bordered table-striped text-center text-dark\" style=\"page-break-inside: always; font-size: 12pt !important;\">\r\n                        <thead>\r\n                            <th> Total Salary </th>\r\n                            <th> Total Overtime Hours </th>\r\n                            <th> Total Food </th>\r\n                            <th> Total Transport </th>\r\n                            <th> Total Cabina </th>\r\n                            <th> Total Expense </th>\r\n                            <th> Total Fine </th>\r\n                            <th> Total Loan </th>\r\n                            <th> Total Accomodation </th>\r\n                            <th> Total Salary per Month </th>\r\n                            <th> Total Other Minus </th>\r\n                            <th> Sub Total </th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <template v-for=\"staff in staffs\" >\r\n                                <tr :key=\"'n' + staff.st_id\">\r\n                                    <td colspan=\"12\" class=\"text-left ps-4\"> {{ staff.staff_name }} </td>\r\n                                </tr>\r\n                                <tr :key=\"'d' + staff.st_id\">\r\n                                    <td>\r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_salary_dollar).toLocaleString() }} $ </span>\r\n                                        <br><br>\r\n                                        <span >  {{ (getTotalsByStaff(staff.st_id).total_salary_dinar).toLocaleString() }} </span>\r\n                                    </td>\r\n                                    <td> \r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_overtime_dollar).toLocaleString() }} $ </span>\r\n                                        <br><br>\r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_overtime_dinar).toLocaleString() }} </span>\r\n                                    </td>\r\n                                    <td> \r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_food_dollar).toLocaleString() }} $ </span>\r\n                                        <br><br>\r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_food_dinar).toLocaleString() }} </span>\r\n                                    </td>\r\n                                    <td> \r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_transport_dollar).toLocaleString() }} $ </span>\r\n                                        <br><br>\r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_transport_dinar).toLocaleString() }} </span>\r\n                                    </td>\r\n                                    <td> \r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_cabina_dollar).toLocaleString() }} $ </span>\r\n                                        <br><br>\r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_cabina_dinar).toLocaleString() }} </span>\r\n                                    </td>\r\n                                    <td> \r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_expense_dollar).toLocaleString() }} $ </span>\r\n                                        <br><br>\r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_expense_dinar).toLocaleString() }} </span>\r\n                                    </td>\r\n                                    <td> \r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_fine_dollar).toLocaleString() }} $ </span>\r\n                                        <br><br>\r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_fine_dinar).toLocaleString() }} </span>\r\n                                    </td>\r\n                                    <td> \r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_loan_dollar).toLocaleString() }} $ </span>\r\n                                        <br><br>\r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_loan_dinar).toLocaleString() }} </span>\r\n                                    </td>\r\n                                    <td> \r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_accomodation_dollar).toLocaleString() }} $ </span>\r\n                                        <br><br>\r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_accomodation_dinar).toLocaleString() }} </span>\r\n                                    </td>\r\n                                    <td> \r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_salary_per_month_dollar).toLocaleString() }} $ </span>\r\n                                        <br><br>\r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_salary_per_month_dinar).toLocaleString() }} </span>\r\n                                    </td>\r\n                                    <td> \r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_other_minus_dollar).toLocaleString() }} $ </span>\r\n                                        <br><br>\r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).total_other_minus_dinar).toLocaleString() }} </span>\r\n                                    </td>\r\n                                    <td> \r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).sub_total_dollar_dollar).toLocaleString() }} $ </span>\r\n                                        <br><br>\r\n                                        <span> {{ (getTotalsByStaff(staff.st_id).sub_total_dinar_dinar).toLocaleString() }} </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </template>\r\n                            <tr>\r\n                                <td class=\"para\">\r\n                                    <span> {{ (totals.total_salary_dollar).toLocaleString() }} $ </span>\r\n                                    <br><br>\r\n                                    <span> {{ (totals.total_salary_dinar).toLocaleString() }} </span>\r\n                                </td>\r\n                                <td class=\"para\">\r\n                                    <span> {{ (totals.total_overtime_dollar).toLocaleString() }} $ </span>\r\n                                    <br><br>\r\n                                    <span> {{ (totals.total_overtime_dinar).toLocaleString() }} </span>\r\n                                </td>\r\n                                <td class=\"para\">\r\n                                    <span> {{ (totals.total_food_dollar).toLocaleString() }} $ </span>\r\n                                    <br><br>\r\n                                    <span> {{ (totals.total_food_dinar).toLocaleString() }} </span>\r\n                                </td>\r\n                                <td class=\"para\">\r\n                                    <span> {{ (totals.total_transport_dollar).toLocaleString() }} $ </span>\r\n                                    <br><br>\r\n                                    <span> {{ (totals.total_transport_dinar).toLocaleString() }} </span>\r\n                                </td>\r\n                                <td class=\"para\">\r\n                                    <span> {{ (totals.total_cabina_dollar).toLocaleString() }} $ </span>\r\n                                    <br><br>\r\n                                    <span> {{ (totals.total_cabina_dinar).toLocaleString() }} </span>\r\n                                </td>\r\n                                <td class=\"para\">\r\n                                    <span> {{ (totals.total_expense_dollar).toLocaleString() }} $ </span>\r\n                                    <br><br>\r\n                                    <span> {{ (totals.total_expense_dinar).toLocaleString() }} </span>\r\n                                </td>\r\n                                <td class=\"para\">\r\n                                    <span> {{ (totals.total_fine_dollar).toLocaleString() }} $ </span>\r\n                                    <br><br>\r\n                                    <span> {{ (totals.total_fine_dinar).toLocaleString() }} </span>\r\n                                </td>\r\n                                <td class=\"para\">\r\n                                    <span> {{ (totals.total_loan_dollar).toLocaleString() }} $ </span>\r\n                                    <br><br>\r\n                                    <span> {{ (totals.total_loan_dinar).toLocaleString() }} </span>\r\n                                </td>\r\n                                <td class=\"para\">\r\n                                    <span> {{ (totals.total_accomodation_dollar).toLocaleString() }} $ </span>\r\n                                    <br><br>\r\n                                    <span> {{ (totals.total_accomodation_dinar).toLocaleString() }} </span>\r\n                                </td>\r\n                                <td class=\"para\">\r\n                                    <span> {{ (totals.total_salary_per_month_dollar).toLocaleString() }} $ </span>\r\n                                    <br><br>\r\n                                    <span> {{ (totals.total_salary_per_month_dinar).toLocaleString() }} </span>\r\n                                </td>\r\n                                <td class=\"para\">\r\n                                    <span> {{ (totals.total_other_minus_dollar).toLocaleString() }} $ </span>\r\n                                    <br><br>\r\n                                    <span> {{ (totals.total_other_minus_dinar).toLocaleString() }} </span>\r\n                                </td>\r\n                                <td class=\"para\">\r\n                                    <span> {{ (totals.sub_total_dollar_dollar).toLocaleString() }} $ </span>\r\n                                    <br><br>\r\n                                    <span> {{ (totals.sub_total_dinar_dinar).toLocaleString() }} </span>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport auth from '../auth';\r\nexport default {\r\n    name: 'total_salary_list',\r\n    data() {\r\n        return {\r\n            list: [],\r\n            zeros: [],\r\n            dollar_price: 0,\r\n            month: Number(this.$route.params.month),\r\n            year: Number(this.$route.params.year),\r\n            loading: true,\r\n            staffs: [],\r\n            is_print: false,\r\n            user: {}\r\n        }\r\n    },\r\n    beforeCreate(){\r\n        auth(\"total_salary_list\");\r\n    },\r\n    created() {\r\n        this.$http.post(\"/getLoggedInfo\").then(({data}) => {\r\n            this.user.username = data.username;\r\n            this.user.role = data.type;\r\n            this.user.en_id = data.en_id || null;\r\n        });\r\n    },\r\n    mounted() {\r\n        this.dollar_price = Number(this.$route.params.dollar_price);\r\n        this.$http.post(\"/staff/getData\").then(({data}) => {\r\n            this.staffs = data.filter(obj => obj.show_staff == '1').sort((a, b) => a.staff_sort_code - b.staff_sort_code)\r\n            if(this.$route.params.special == 'normals') {\r\n                this.staffs = this.staffs.filter(obj => obj.special_staff == 'false')\r\n            } else {\r\n                this.staffs = this.staffs.filter(obj => obj.special_staff == 'true')\r\n            }\r\n            this.$http.post('/employee/getSalaryListByMonthAndYearForTotal', {\r\n                month: Number(this.$route.params.month),\r\n                year: Number(this.$route.params.year),\r\n                special: this.$route.params.special\r\n            }).then(({data}) => {\r\n                this.loading = false;\r\n                this.list = data.salary_list;\r\n                this.zeros = data.zeros;\r\n                this.overWorkDayToOvertime();\r\n            })\r\n        });\r\n        window.matchMedia('print').addListener(e => {\r\n            if(e.matches) {\r\n                this.is_print = true;\r\n            } else {\r\n                this.is_print = false;\r\n            }\r\n        });\r\n    },\r\n    methods: {\r\n        fridays(year, month) {\r\n            var day, counter, date;\r\n            day = 1;\r\n            counter = 0;\r\n            date = new Date(year, month, day);\r\n            \r\n            while (date.getMonth() === month) {\r\n                if (date.getDay() === 5) { // Sun=0, Mon=1, Tue=2, etc.\r\n                    counter += 1;\r\n                }\r\n                day += 1;\r\n                date = new Date(year, month, day);\r\n            }\r\n            return counter;\r\n        },\r\n        getDaysAndFridays(month, year) {\r\n            const totalDays = new Date(year, month, 0).getDate();\r\n            let fridays = 0;\r\n\r\n            for (let day = 1; day <= totalDays; day++) {\r\n                const currentDate = new Date(year, month - 1, day);\r\n                if (currentDate.getDay() === 5) {\r\n                    fridays++;\r\n                }\r\n            }\r\n\r\n            return {\r\n                days: totalDays,\r\n                fridays: fridays\r\n            };\r\n        },\r\n        overWorkDayToOvertime() {\r\n            for(let i = 0; i < this.list.length; i++) {\r\n                var count_present = this.list[i].count_present;\r\n                // var d = new Date(this.year, this.month - 1);\r\n                \r\n                // const allDaysInMonth = new Date(d.getFullYear(), d.getMonth() + 1, 0).getDate();\r\n                // const numberOfFridays = this.fridays(this.year, this.month - 1);\r\n                const allDaysInMonth = this.getDaysAndFridays(this.month, this.year).days;\r\n                const numberOfFridays = this.getDaysAndFridays(this.month, this.year).fridays;\r\n                \r\n                const days = allDaysInMonth - numberOfFridays;\r\n                \r\n                if(count_present > days) {\r\n                    var overtimeDays = count_present - days;\r\n                    this.list[i].total_hour += (overtimeDays * 8);\r\n                    this.list[i].count_present = days;\r\n                }\r\n            }\r\n        },\r\n        getSuitableSalary(item) {\r\n            // var d = new Date();\r\n            // d.setMonth(this.month - 1);\r\n            // d.setFullYear(this.year);\r\n            // const allDaysInMonth = new Date(d.getFullYear(), d.getMonth() + 1, 0).getDate();\r\n            // const numberOfFridays = this.fridays(this.year, this.month - 1);\r\n            const allDaysInMonth = this.getDaysAndFridays(this.month, this.year).days;\r\n            const numberOfFridays = this.getDaysAndFridays(this.month, this.year).fridays;\r\n            const days = allDaysInMonth - numberOfFridays;\r\n            if(item.salary_type == 'Monthly') {\r\n                item.daily_salary = Number(item.monthly_salary / days).toFixed(2);\r\n                return Number(Number(item.monthly_salary / days).toFixed(2));\r\n            } else {\r\n                return (item.daily_salary);\r\n            }\r\n\r\n        },\r\n        getTotalsByStaff(st_id) {\r\n            let totals_obj = {\r\n                total_salary_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + (this.getSuitableSalary(n) * n.count_present), 0),\r\n                total_salary_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + (this.getSuitableSalary(n) * n.count_present), 0),\r\n\r\n                total_overtime_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number((((n.monthly_salary/26) / 8 ) * n.total_hour).toFixed(2)), 0),\r\n                total_overtime_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(((n.daily_salary / 8 ) * n.total_hour).toFixed(2)), 0),\r\n\r\n                total_food_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.food_money) + Number(n.total_food)), 0),\r\n                total_food_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.food_money) + Number(n.total_food)), 0),\r\n\r\n                total_transport_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.transport_money) + Number(n.total_transport)), 0),\r\n                total_transport_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.transport_money) + Number(n.total_transport)), 0),\r\n\r\n                total_cabina_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(n.cabina_money), 0),\r\n                total_cabina_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(n.cabina_money), 0),\r\n\r\n                total_expense_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.expense_money) + Number(n.total_expense) + Number(n.expense_by_accomodation)), 0),\r\n                total_expense_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.expense_money) + Number(n.total_expense) + Number(n.expense_by_accomodation)), 0),\r\n\r\n                total_fine_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number((n.fine_money - n.total_fine) + n.fine_by_accomodation), 0),\r\n                total_fine_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number((n.fine_money - n.total_fine) + n.fine_by_accomodation), 0),\r\n\r\n                total_loan_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.loan_money) + Number(n.total_loan) + Number(n.loan_by_accomodation)), 0),\r\n                total_loan_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.loan_money) + Number(n.total_loan) + Number(n.loan_by_accomodation)), 0),\r\n\r\n                total_accomodation_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.accomodation_money) + Number(n.total_accomodation) + Number(n.accomodation_by_accomodation)), 0),\r\n                total_accomodation_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.accomodation_money) + Number(n.total_accomodation) + Number(n.accomodation_by_accomodation)), 0),\r\n\r\n                total_salary_per_month_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(n.other_expense), 0),\r\n                total_salary_per_month_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(n.other_expense), 0),\r\n\r\n                total_other_minus_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(n.other_minus), 0),\r\n                total_other_minus_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(n.other_minus), 0),\r\n\r\n                sub_total_dollar_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + \r\n                    Number((this.getSuitableSalary(n) * n.count_present  + Number(((n.monthly_salary / 26) / 8 ) * n.total_hour) +   Number(n.food_money) + Number(n.transport_money) + Number(n.total_expense) + Number(n.expense_by_accomodation) + Number(n.fine_by_accomodation) + Number(n.total_transport) + Number(n.total_food) + Number(n.total_loan) + Number(n.total_accomodation) + Number(n.loan_by_accomodation) + Number(n.accomodation_by_accomodation) + Number(n.cabina_money) + Number(n.expense_money) + Number(n.fine_money) - Number(n.total_fine) + Number(n.loan_money) + Number(n.accomodation_money) + Number(n.other_expense) + Number(n.other_minus)).toFixed(2))\r\n                , 0),\r\n                sub_total_dollar_dinar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + \r\n                    Math.round(Number(((this.getSuitableSalary(n) * n.count_present) + Number(((n.monthly_salary / 26) / 8 ) * n.total_hour) +   Number(n.food_money) + Number(n.transport_money) + Number(n.total_expense) + Number(n.expense_by_accomodation) + Number(n.fine_by_accomodation) + Number(n.total_transport) + Number(n.total_food) + Number(n.total_loan) + Number(n.total_accomodation) + Number(n.loan_by_accomodation) + Number(n.accomodation_by_accomodation) + Number(n.cabina_money) + Number(n.expense_money) + Number(n.fine_money) - Number(n.total_fine) + Number(n.loan_money) + Number(n.accomodation_money) + Number(n.other_expense) + Number(n.other_minus)) * this.dollar_price))\r\n                , 0),\r\n\r\n                sub_total_dinar_dollar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + \r\n                    Math.round(((n.daily_salary * n.count_present)  + ((n.daily_salary / 8 ) * n.total_hour)  + (n.food_money) - n.total_fine + n.transport_money + Number(n.total_expense) + Number(n.expense_by_accomodation) + Number(n.fine_by_accomodation) + Number(n.total_transport) + Number(n.total_food) + Number(n.total_loan) + Number(n.total_accomodation) + Number(n.loan_by_accomodation) + Number(n.accomodation_by_accomodation) + n.cabina_money + n.expense_money + n.fine_money + n.loan_money + n.accomodation_money + n.other_expense + n.other_minus)/ this.dollar_price)\r\n                , 0),\r\n                \r\n                sub_total_dinar_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => obj.st_id == st_id).filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + \r\n                    Math.round((Math.round(n.daily_salary * n.count_present)  + Math.round((n.daily_salary / 8 ) * n.total_hour)  + (n.food_money) - n.total_fine + n.transport_money + Number(n.total_expense) + Number(n.fine_by_accomodation) + Number(n.expense_by_accomodation) + Number(n.total_transport) + Number(n.total_food) + Number(n.total_loan) + Number(n.total_accomodation) + Number(n.loan_by_accomodation) + Number(n.accomodation_by_accomodation) + n.cabina_money + n.expense_money + n.fine_money + n.loan_money + n.accomodation_money + n.other_expense + n.other_minus) )\r\n                , 0),\r\n\r\n            }\r\n            return totals_obj;\r\n        }\r\n    },\r\n    computed: {\r\n        totals() {\r\n            let obj = {\r\n                total_salary_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + (this.getSuitableSalary(n) * n.count_present), 0),\r\n                total_salary_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + (this.getSuitableSalary(n) * n.count_present), 0),\r\n\r\n                total_overtime_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number((((n.monthly_salary/26) / 8 ) * n.total_hour).toFixed(2)), 0),\r\n                total_overtime_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(((n.daily_salary / 8 ) * n.total_hour).toFixed(2)), 0),\r\n\r\n                total_food_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.food_money) + Number(n.total_food)), 0),\r\n                total_food_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.food_money) + Number(n.total_food)), 0),\r\n\r\n                total_transport_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.transport_money) + Number(n.total_transport)), 0),\r\n                total_transport_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.transport_money) + Number(n.total_transport)), 0),\r\n\r\n                total_cabina_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(n.cabina_money), 0),\r\n                total_cabina_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(n.cabina_money), 0),\r\n\r\n                total_expense_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.expense_money) + Number(n.total_expense) + Number(n.expense_by_accomodation)), 0),\r\n                total_expense_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.expense_money) + Number(n.total_expense) + Number(n.expense_by_accomodation)), 0),\r\n\r\n                total_fine_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number((n.fine_money - n.total_fine) + n.fine_by_accomodation), 0),\r\n                total_fine_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number((n.fine_money - n.total_fine) + n.fine_by_accomodation), 0),\r\n\r\n                total_loan_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.loan_money) + Number(n.total_loan) + Number(n.loan_by_accomodation)), 0),\r\n                total_loan_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.loan_money) + Number(n.total_loan) + Number(n.loan_by_accomodation)), 0),\r\n\r\n                total_accomodation_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.accomodation_money) + Number(n.total_accomodation) + Number(n.accomodation_by_accomodation)), 0),\r\n                total_accomodation_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(Number(n.accomodation_money) + Number(n.total_accomodation) + Number(n.accomodation_by_accomodation)), 0),\r\n\r\n                total_salary_per_month_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(n.other_expense), 0),\r\n                total_salary_per_month_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(n.other_expense), 0),\r\n\r\n                total_other_minus_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(n.other_minus), 0),\r\n                total_other_minus_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + Number(n.other_minus), 0),\r\n\r\n                sub_total_dollar_dollar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + \r\n                    Number((this.getSuitableSalary(n) * n.count_present  + Number(((n.monthly_salary / 26) / 8 ) * n.total_hour) +   Number(n.food_money) + Number(n.transport_money) + Number(n.total_expense) + Number(n.expense_by_accomodation) + Number(n.fine_by_accomodation) + Number(n.total_transport) + Number(n.total_food) + Number(n.total_loan) + Number(n.total_accomodation) + Number(n.loan_by_accomodation) + Number(n.accomodation_by_accomodation) + Number(n.cabina_money) + Number(n.expense_money) + Number(n.fine_money) - Number(n.total_fine) + Number(n.loan_money) + Number(n.accomodation_money) + Number(n.other_expense) + Number(n.other_minus)).toFixed(2))\r\n                , 0),\r\n                sub_total_dollar_dinar: this.list.filter(item => item.salary_type == 'Monthly').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + \r\n                    Math.round(Number(((this.getSuitableSalary(n) * n.count_present) + Number(((n.monthly_salary / 26) / 8 ) * n.total_hour) +   Number(n.food_money) + Number(n.transport_money) + Number(n.total_expense) + Number(n.expense_by_accomodation) + Number(n.fine_by_accomodation) + Number(n.total_transport) + Number(n.total_food) + Number(n.total_loan) + Number(n.total_accomodation) + Number(n.loan_by_accomodation) + Number(n.accomodation_by_accomodation) + Number(n.cabina_money) + Number(n.expense_money) + Number(n.fine_money) - Number(n.total_fine) + Number(n.loan_money) + Number(n.accomodation_money) + Number(n.other_expense) + Number(n.other_minus)) * this.dollar_price))\r\n                , 0),\r\n\r\n                sub_total_dinar_dollar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + \r\n                    Math.round(((n.daily_salary * n.count_present)  + ((n.daily_salary / 8 ) * n.total_hour)  + (n.food_money) - n.total_fine + n.transport_money + Number(n.total_expense) + Number(n.expense_by_accomodation) + Number(n.fine_by_accomodation) + Number(n.total_transport) + Number(n.total_food) + Number(n.total_loan) + Number(n.total_accomodation) + Number(n.loan_by_accomodation) + Number(n.accomodation_by_accomodation) + n.cabina_money + n.expense_money + n.fine_money + n.loan_money + n.accomodation_money + n.other_expense + n.other_minus)/ this.dollar_price)\r\n                , 0),\r\n                \r\n                sub_total_dinar_dinar: this.list.filter(item => item.salary_type == 'Daily').filter(obj => !this.zeros.find(z => z.emp_id == obj.emp_id && z.st_id == obj.st_id)).reduce((acc, n) => acc + \r\n                    Math.round((Math.round(n.daily_salary * n.count_present)  + Math.round((n.daily_salary / 8 ) * n.total_hour)  + (n.food_money) - n.total_fine + n.transport_money + Number(n.total_expense) + Number(n.expense_by_accomodation) + Number(n.fine_by_accomodation) + Number(n.total_transport) + Number(n.total_food) + Number(n.total_loan) + Number(n.total_accomodation) + Number(n.loan_by_accomodation) + Number(n.accomodation_by_accomodation) + n.cabina_money + n.expense_money + n.fine_money + n.loan_money + n.accomodation_money + n.other_expense + n.other_minus) )\r\n                , 0),\r\n\r\n            }\r\n            return obj;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n    .rtl {\r\n        text-align: right !important;\r\n    }\r\n    tbody td {\r\n        padding: .5rem;\r\n    }\r\n    .para {\r\n        background-color: rgb(81, 224, 81) !important;\r\n        color: black !important;\r\n    }\r\n    .para-total {\r\n        background-color: rgb(68, 171, 231) !important;\r\n        color: black !important;\r\n    }\r\n    th, td {\r\n        font-size: 11pt;\r\n        padding-inline: 6px;\r\n        /* border: 1px solid black !important; */\r\n    }\r\n    th, td:not(.text-danger) {\r\n        color: rgb(17, 17, 17);\r\n    }\r\n    @media print {\r\n        .no-print, #nav {\r\n            display: none;\r\n        }\r\n        *:not(.para, .para-total, .expired-passport-date) {\r\n            background-color: white ;\r\n            \r\n        }\r\n        th, td {\r\n            padding-inline: 6px;\r\n        }\r\n        .para {\r\n            background-color: rgb(81, 224, 81) !important;\r\n            color: black !important;\r\n        }\r\n        .para-total {\r\n            background-color: rgb(68, 171, 231) !important;\r\n            color: black !important;\r\n        }\r\n        table {\r\n            font-size: 9pt !important;\r\n        }\r\n        @page {\r\n            size: landscape;\r\n        }\r\n    }\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./total_salary_list.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./total_salary_list.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./total_salary_list.vue?vue&type=template&id=5ab684fd&scoped=true&\"\nimport script from \"./total_salary_list.vue?vue&type=script&lang=js&\"\nexport * from \"./total_salary_list.vue?vue&type=script&lang=js&\"\nimport style0 from \"./total_salary_list.vue?vue&type=style&index=0&id=5ab684fd&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5ab684fd\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VProgressCircular } from 'vuetify/lib/components/VProgressCircular';\ninstallComponents(component, {VProgressCircular})\n"],"sourceRoot":""}